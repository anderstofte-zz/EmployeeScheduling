// <auto-generated />
using System;
using EmployeeScheduling.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeeScheduling.Migrations
{
    [DbContext(typeof(EmployeeSchedulingContext))]
    [Migration("20200811163040_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeeScheduling.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email = "kat.and@acme.com",
                            FirstName = "Katrine",
                            LastName = "Anderson"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Email = "magnus_latif@acme.com",
                            FirstName = "Magnus",
                            LastName = "Latif"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Email = "andy-s@acme.com",
                            FirstName = "Andy",
                            LastName = "Smith"
                        });
                });

            modelBuilder.Entity("EmployeeScheduling.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShiftEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftStart")
                        .HasColumnType("datetime2");

                    b.HasKey("ShiftId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Shifts");

                    b.HasData(
                        new
                        {
                            ShiftId = 1,
                            EmployeeId = 1,
                            ShiftEnd = new DateTime(2020, 8, 13, 22, 30, 39, 837, DateTimeKind.Local).AddTicks(393),
                            ShiftStart = new DateTime(2020, 8, 13, 18, 30, 39, 834, DateTimeKind.Local).AddTicks(5024)
                        },
                        new
                        {
                            ShiftId = 2,
                            EmployeeId = 1,
                            ShiftEnd = new DateTime(2020, 8, 15, 0, 30, 39, 837, DateTimeKind.Local).AddTicks(1130),
                            ShiftStart = new DateTime(2020, 8, 14, 18, 30, 39, 837, DateTimeKind.Local).AddTicks(1103)
                        },
                        new
                        {
                            ShiftId = 3,
                            EmployeeId = 1,
                            ShiftEnd = new DateTime(2020, 8, 12, 1, 30, 39, 837, DateTimeKind.Local).AddTicks(1146),
                            ShiftStart = new DateTime(2020, 8, 11, 18, 30, 39, 837, DateTimeKind.Local).AddTicks(1142)
                        },
                        new
                        {
                            ShiftId = 4,
                            EmployeeId = 2,
                            ShiftEnd = new DateTime(2020, 8, 14, 0, 30, 39, 837, DateTimeKind.Local).AddTicks(1153),
                            ShiftStart = new DateTime(2020, 8, 13, 18, 30, 39, 837, DateTimeKind.Local).AddTicks(1150)
                        },
                        new
                        {
                            ShiftId = 5,
                            EmployeeId = 2,
                            ShiftEnd = new DateTime(2020, 8, 15, 22, 30, 39, 837, DateTimeKind.Local).AddTicks(1161),
                            ShiftStart = new DateTime(2020, 8, 15, 18, 30, 39, 837, DateTimeKind.Local).AddTicks(1157)
                        },
                        new
                        {
                            ShiftId = 6,
                            EmployeeId = 2,
                            ShiftEnd = new DateTime(2020, 8, 11, 23, 30, 39, 837, DateTimeKind.Local).AddTicks(1168),
                            ShiftStart = new DateTime(2020, 8, 11, 18, 30, 39, 837, DateTimeKind.Local).AddTicks(1165)
                        },
                        new
                        {
                            ShiftId = 7,
                            EmployeeId = 3,
                            ShiftEnd = new DateTime(2020, 8, 13, 2, 30, 39, 837, DateTimeKind.Local).AddTicks(1175),
                            ShiftStart = new DateTime(2020, 8, 12, 18, 30, 39, 837, DateTimeKind.Local).AddTicks(1172)
                        },
                        new
                        {
                            ShiftId = 8,
                            EmployeeId = 3,
                            ShiftEnd = new DateTime(2020, 8, 15, 0, 30, 39, 837, DateTimeKind.Local).AddTicks(1182),
                            ShiftStart = new DateTime(2020, 8, 14, 18, 30, 39, 837, DateTimeKind.Local).AddTicks(1179)
                        },
                        new
                        {
                            ShiftId = 9,
                            EmployeeId = 3,
                            ShiftEnd = new DateTime(2020, 8, 11, 21, 30, 39, 837, DateTimeKind.Local).AddTicks(1190),
                            ShiftStart = new DateTime(2020, 8, 11, 18, 30, 39, 837, DateTimeKind.Local).AddTicks(1186)
                        });
                });

            modelBuilder.Entity("EmployeeScheduling.Models.Shift", b =>
                {
                    b.HasOne("EmployeeScheduling.Models.Employee", null)
                        .WithMany("Shifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
